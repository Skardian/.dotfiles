# Using C-Space as a prefix
unbind C-b
set -g prefix C-Space
bind Space send-prefix

# Split windows with s and v
unbind %
bind s split-window -v -c "#{pane_current_path}"
bind v split-window -h -c "#{pane_current_path}"

# Create new window with c and ^C
bind c new-window -c "#{pane_current_path}"

# Start numbering at 1
set -g base-index 1

# re-number windows when one is closed
set -g renumber-windows on

# color
set -g default-terminal "screen-256color"

# Agressive resize
setw -g aggressive-resize on

set -sg escape-time 0

# enable activity alerts
setw -g monitor-activity on
set-option -gw window-status-activity-attr bold
set-option -gw window-status-activity-bg black
set-option -gw window-status-activity-fg red

# Sane scrolling
set -g terminal-overrides 'xterm*:smcup@:rmcup@'

# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

bind C-l send-keys 'C-l'

# No need to unpress Ctrl to change window
bind C-n next-window
bind C-p previous-window

# Reload Config
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# Status bar config
set-option -g status-utf8 on
set-option -g status-justify left
set -g status-bg black
set -g status-fg white
set -g window-status-current-bg white
set -g window-status-current-fg black
set -g window-status-current-attr bold
set -g status-interval 60
set -g status-left-length 36

# (Session) |user@host| Windows01 Window02 Window03 ....
set -g status-left '#[fg=white](#S) #[fg=green]|#(whoami)@#h|'
set -g status-right ''

# Mouse controls
set -g mode-mouse on
set-option -g mouse-select-pane on
set-option -g mouse-select-window on
set-option -g mouse-resize-pane on
